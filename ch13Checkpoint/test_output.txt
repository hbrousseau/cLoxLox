========================================
Test: assignment/associativity.lox
c
c
c
========================================

========================================
Test: assignment/global.lox
before
after
arg
arg
========================================

========================================
Test: assignment/grouping.lox
========================================
Test: assignment/infix_operator.lox
========================================
Test: assignment/local.lox
before
after
arg
arg
========================================

========================================
Test: assignment/prefix_operator.lox
========================================
Test: assignment/syntax.lox
var
var
========================================

========================================
Test: assignment/to_this.lox
========================================
Test: assignment/undefined.lox
========================================
Test: block/empty.lox
ok
========================================

========================================
Test: block/scope.lox
inner
outer
========================================

========================================
Test: bool/equality.lox
true
false
false
true
false
false
false
false
false
false
true
true
false
true
true
true
true
true
========================================

========================================
Test: bool/not.lox
false
true
true
========================================

========================================
Test: call/bool.lox
========================================
Test: call/nil.lox
========================================
Test: call/num.lox
========================================
Test: call/object.lox
========================================
Test: call/string.lox
========================================
Test: class/empty.lox
Foo
========================================

========================================
Test: class/inherit_self.lox
========================================
Test: class/inherited_method.lox
in foo
in bar
in baz
========================================

========================================
Test: class/local_inherit_other.lox
B
========================================

========================================
Test: class/local_inherit_self.lox
========================================
Test: class/local_reference_self.lox
Foo
========================================

========================================
Test: class/reference_self.lox
Foo
========================================

========================================
Test: closure/assign_to_closure.lox
local
after f
after f
after g
========================================

========================================
Test: closure/assign_to_shadowed_later.lox
inner
assigned
========================================

========================================
Test: closure/close_over_function_parameter.lox
param
========================================

========================================
Test: closure/close_over_later_variable.lox
b
a
========================================

========================================
Test: closure/close_over_method_parameter.lox
param
========================================

========================================
Test: closure/closed_closure_in_function.lox
local
========================================

========================================
Test: closure/nested_closure.lox
a
b
c
========================================

========================================
Test: closure/open_closure_in_function.lox
local
========================================

========================================
Test: closure/reference_closure_multiple_times.lox
a
a
========================================

========================================
Test: closure/reuse_closure_slot.lox
a
========================================

========================================
Test: closure/shadow_closure_with_local.lox
closure
shadow
closure
========================================

========================================
Test: closure/unused_closure.lox
ok
========================================

========================================
Test: closure/unused_later_closure.lox
a
========================================

========================================
Test: comments/line_at_eof.lox
ok
========================================

========================================
Test: comments/only_line_comment.lox
========================================

========================================
Test: comments/only_line_comment_and_line.lox
========================================

========================================
Test: comments/unicode.lox
ok
========================================

========================================
Test: constructor/arguments.lox
init
1.000000
2.000000
========================================

========================================
Test: constructor/call_init_early_return.lox
init
init
Foo instance
========================================

========================================
Test: constructor/call_init_explicitly.lox
Foo.init(one)
Foo.init(two)
Foo instance
init
========================================

========================================
Test: constructor/default.lox
Foo instance
========================================

========================================
Test: constructor/default_arguments.lox
========================================
Test: constructor/early_return.lox
init
Foo instance
========================================

========================================
Test: constructor/extra_arguments.lox
========================================
Test: constructor/init_not_method.lox
not initializer
========================================

========================================
Test: constructor/missing_arguments.lox
========================================
Test: constructor/return_in_nested_function.lox
bar
Foo instance
========================================

========================================
Test: constructor/return_value.lox
========================================

========================================
Test: expressions/evaluate.lox
========================================
Test: expressions/parse.lox
========================================
Test: field/call_function_field.lox
bar
1.000000
2.000000
========================================

========================================
Test: field/call_nonfunction_field.lox
========================================
Test: field/get_and_set_method.lox
other
1.000000
method
2.000000
========================================

========================================
Test: field/get_on_bool.lox
========================================
Test: field/get_on_class.lox
========================================
Test: field/get_on_function.lox
========================================
Test: field/get_on_nil.lox
========================================
Test: field/get_on_num.lox
========================================
Test: field/get_on_string.lox
========================================
Test: field/many.lox
apple
apricot
avocado
banana
bilberry
blackberry
blackcurrant
blueberry
boysenberry
cantaloupe
cherimoya
cherry
clementine
cloudberry
coconut
cranberry
currant
damson
date
dragonfruit
durian
elderberry
feijoa
fig
gooseberry
grape
grapefruit
guava
honeydew
huckleberry
jabuticaba
jackfruit
jambul
jujube
juniper
kiwifruit
kumquat
lemon
lime
longan
loquat
lychee
mandarine
mango
marionberry
melon
miracle
mulberry
nance
nectarine
olive
orange
papaya
passionfruit
peach
pear
persimmon
physalis
pineapple
plantain
plum
plumcot
pomegranate
pomelo
quince
raisin
rambutan
raspberry
redcurrant
salak
salmonberry
satsuma
strawberry
tamarillo
tamarind
tangerine
tomato
watermelon
yuzu
========================================

========================================
Test: field/method.lox
got method
arg
========================================

========================================
Test: field/method_binds_this.lox
foo1
1.000000
========================================

========================================
Test: field/on_instance.lox
bar value
baz value
bar value
baz value
========================================

========================================
Test: field/set_evaluation_order.lox
========================================
Test: field/set_on_bool.lox
========================================
Test: field/set_on_class.lox
========================================
Test: field/set_on_function.lox
========================================
Test: field/set_on_nil.lox
========================================
Test: field/set_on_num.lox
========================================
Test: field/set_on_string.lox
========================================
Test: field/undefined.lox
========================================
Test: for/class_in_body.lox
========================================
Test: for/closure_in_body.lox
4.000000
1.000000
4.000000
2.000000
4.000000
3.000000
========================================

========================================
Test: for/fun_in_body.lox
========================================
Test: for/return_closure.lox
i
========================================

========================================
Test: for/return_inside.lox
i
========================================

========================================
Test: for/scope.lox
0.000000
-1.000000
after
0.000000
========================================

========================================
Test: for/statement_condition.lox
========================================
Test: for/statement_increment.lox
========================================
Test: for/statement_initializer.lox
========================================
Test: for/syntax.lox
1.000000
2.000000
3.000000
0.000000
1.000000
2.000000
done
0.000000
1.000000
0.000000
1.000000
2.000000
0.000000
1.000000
========================================

========================================
Test: for/var_in_body.lox
========================================
Test: function/body_must_be_block.lox
========================================
Test: function/empty_body.lox
nil
========================================

========================================
Test: function/extra_arguments.lox
========================================
Test: function/local_mutual_recursion.lox
========================================
Test: function/local_recursion.lox
21.000000
========================================

========================================
Test: function/missing_arguments.lox
========================================
Test: function/missing_comma_in_parameters.lox
========================================
Test: function/mutual_recursion.lox
true
true
========================================

========================================
Test: function/nested_call_with_arguments.lox
hello world
========================================

========================================
Test: function/parameters.lox
0.000000
1.000000
3.000000
6.000000
10.000000
15.000000
21.000000
28.000000
36.000000
========================================

========================================
Test: function/print.lox
<fn foo>
Error in stringify: object type not recognized.
========================================

========================================
Test: function/recursion.lox
21.000000
========================================

========================================
Test: function/too_many_arguments.lox
========================================
Test: function/too_many_parameters.lox
========================================
Test: if/class_in_else.lox
========================================
Test: if/class_in_then.lox
========================================
Test: if/dangling_else.lox
good
========================================

========================================
Test: if/else.lox
good
good
block
========================================

========================================
Test: if/fun_in_else.lox
========================================
Test: if/fun_in_then.lox
========================================
Test: if/if.lox
good
block
true
========================================

========================================
Test: if/truth.lox
false
nil
true
0.000000
empty
========================================

========================================
Test: if/var_in_else.lox
========================================
Test: if/var_in_then.lox
========================================
Test: inheritance/constructor.lox
value
========================================

========================================
Test: inheritance/inherit_from_function.lox
========================================
Test: inheritance/inherit_from_nil.lox
========================================
Test: inheritance/inherit_from_number.lox
========================================
Test: inheritance/inherit_methods.lox
foo
bar
bar
========================================

========================================
Test: inheritance/parenthesized_superclass.lox
========================================
Test: inheritance/set_fields_from_base_class.lox
foo 1
foo 2
bar 1
bar 2
bar 1
bar 2
========================================

========================================
Test: limit/loop_too_large.lox
========================================

========================================
Test: limit/no_reuse_constants.lox
========================================

========================================
Test: limit/stack_overflow.lox
========================================
Test: limit/too_many_constants.lox
========================================

========================================
Test: limit/too_many_locals.lox
========================================

========================================
Test: limit/too_many_upvalues.lox
========================================

========================================
Test: logical_operator/and.lox
false
1.000000
false
true
3.000000
true
false
========================================

========================================
Test: logical_operator/and_truth.lox
false
nil
ok
ok
ok
========================================

========================================
Test: logical_operator/or.lox
1.000000
1.000000
true
false
false
false
true
========================================

========================================
Test: logical_operator/or_truth.lox
ok
ok
true
0.000000
s
========================================

========================================
Test: method/arity.lox
no args
1.000000
3.000000
6.000000
10.000000
15.000000
21.000000
28.000000
36.000000
========================================

========================================
Test: method/empty_block.lox
nil
========================================

========================================
Test: method/extra_arguments.lox
========================================
Test: method/missing_arguments.lox
========================================
Test: method/not_found.lox
========================================
Test: method/print_bound_method.lox
<fn method>
========================================

========================================
Test: method/refer_to_name.lox
========================================
Test: method/too_many_arguments.lox
========================================
Test: method/too_many_parameters.lox
========================================
Test: nil/literal.lox
nil
========================================

========================================
Test: number/decimal_point_at_eof.lox
========================================
Test: number/leading_dot.lox
========================================
Test: number/literals.lox
123.000000
987654.000000
0.000000
-0.000000
123.456000
-0.001000
========================================

========================================
Test: number/nan_equality.lox
false
true
false
true
========================================

========================================
Test: number/trailing_dot.lox
========================================
Test: operator/add.lox
579.000000
string
========================================

========================================
Test: operator/add_bool_nil.lox
========================================
Test: operator/add_bool_num.lox
========================================
Test: operator/add_bool_string.lox
========================================
Test: operator/add_nil_nil.lox
========================================
Test: operator/add_num_nil.lox
========================================
Test: operator/add_string_nil.lox
========================================
Test: operator/comparison.lox
true
false
false
true
true
false
false
false
true
false
true
true
false
false
false
false
true
true
true
true
========================================

========================================
Test: operator/divide.lox
4.000000
1.000000
========================================

========================================
Test: operator/divide_nonnum_num.lox
========================================
Test: operator/divide_num_nonnum.lox
========================================
Test: operator/equals.lox
true
true
false
true
false
true
false
false
false
false
========================================

========================================
Test: operator/equals_class.lox
false
false
false
false
false
false
false
false
========================================

========================================
Test: operator/equals_method.lox
false
false
========================================

========================================
Test: operator/greater_nonnum_num.lox
========================================
Test: operator/greater_num_nonnum.lox
========================================
Test: operator/greater_or_equal_nonnum_num.lox
========================================
Test: operator/greater_or_equal_num_nonnum.lox
========================================
Test: operator/less_nonnum_num.lox
========================================
Test: operator/less_num_nonnum.lox
========================================
Test: operator/less_or_equal_nonnum_num.lox
========================================
Test: operator/less_or_equal_num_nonnum.lox
========================================
Test: operator/multiply.lox
15.000000
3.702000
========================================

========================================
Test: operator/multiply_nonnum_num.lox
========================================
Test: operator/multiply_num_nonnum.lox
========================================
Test: operator/negate.lox
-3.000000
3.000000
-3.000000
========================================

========================================
Test: operator/negate_nonnum.lox
========================================
Test: operator/not.lox
false
true
true
false
false
true
false
false
========================================

========================================
Test: operator/not_class.lox
false
false
========================================

========================================
Test: operator/not_equals.lox
false
false
true
false
true
false
true
true
true
true
========================================

========================================
Test: operator/subtract.lox
1.000000
0.000000
========================================

========================================
Test: operator/subtract_nonnum_num.lox
========================================
Test: operator/subtract_num_nonnum.lox
========================================
Test: print/missing_argument.lox
========================================
Test: regression/394.lox
B
========================================

========================================
Test: regression/40.lox
false
========================================

========================================
Test: return/after_else.lox
ok
========================================

========================================
Test: return/after_if.lox
ok
========================================

========================================
Test: return/after_while.lox
ok
========================================

========================================
Test: return/at_top_level.lox
========================================
Test: return/in_function.lox
ok
========================================

========================================
Test: return/in_method.lox
ok
========================================

========================================
Test: return/return_nil_if_no_value.lox
nil
========================================

========================================
Test: scanning/identifiers.lox
========================================
Test: scanning/keywords.lox
========================================
Test: scanning/numbers.lox
========================================
Test: scanning/punctuators.lox
========================================
Test: scanning/strings.lox
========================================
Test: scanning/whitespace.lox
========================================
Test: string/error_after_multiline.lox
========================================
Test: string/literals.lox
()
a string
A~¶Þॐஃ
========================================

========================================
Test: string/multiline.lox
1
2
3
========================================

========================================
Test: string/unterminated.lox
========================================
Test: super/bound_method.lox
A.method(arg)
========================================

========================================
Test: super/call_other_method.lox
Derived.bar()
Base.foo()
========================================

========================================
Test: super/call_same_method.lox
Derived.foo()
Base.foo()
========================================

========================================
Test: super/closure.lox
Base
========================================

========================================
Test: super/constructor.lox
Derived.init()
Base.init(a, b)
========================================

========================================
Test: super/extra_arguments.lox
Derived.foo()
========================================
Test: super/indirectly_inherited.lox
C.foo()
A.foo()
========================================

========================================
Test: super/missing_arguments.lox
========================================
Test: super/no_superclass_bind.lox
========================================
Test: super/no_superclass_call.lox
========================================
Test: super/no_superclass_method.lox
========================================
Test: super/parenthesized.lox
========================================
Test: super/reassign_superclass.lox
Base.method()
Base.method()
========================================

========================================
Test: super/super_at_top_level.lox
========================================
Test: super/super_in_closure_in_inherited_method.lox
A
========================================

========================================
Test: super/super_in_inherited_method.lox
A
========================================

========================================
Test: super/super_in_top_level_function.lox
========================================
Test: super/super_without_dot.lox
========================================
Test: super/super_without_name.lox
========================================
Test: super/this_in_superclass_method.lox
a
b
========================================

========================================
Test: this/closure.lox
Foo
========================================

========================================
Test: this/nested_class.lox
Outer instance
Outer instance
Inner instance
========================================

========================================
Test: this/nested_closure.lox
Foo
========================================

========================================
Test: this/this_at_top_level.lox
========================================
Test: this/this_in_method.lox
baz
========================================

========================================
Test: this/this_in_top_level_function.lox
========================================
Test: variable/collide_with_parameter.lox
========================================
Test: variable/duplicate_local.lox
========================================
Test: variable/duplicate_parameter.lox
========================================
Test: variable/early_bound.lox
outer
outer
========================================

========================================
Test: variable/in_middle_of_block.lox
a
a b
a c
a b d
========================================

========================================
Test: variable/in_nested_block.lox
outer
========================================

========================================
Test: variable/local_from_method.lox
variable
========================================

========================================
Test: variable/redeclare_global.lox
nil
========================================

========================================
Test: variable/redefine_global.lox
2
========================================

========================================
Test: variable/scope_reuse_in_different_blocks.lox
first
second
========================================

========================================
Test: variable/shadow_and_local.lox
outer
inner
========================================

========================================
Test: variable/shadow_global.lox
shadow
global
========================================

========================================
Test: variable/shadow_local.lox
shadow
local
========================================

========================================
Test: variable/undefined_global.lox
========================================
Test: variable/undefined_local.lox
========================================
Test: variable/uninitialized.lox
nil
========================================

========================================
Test: variable/unreached_undefined.lox
ok
========================================

========================================
Test: variable/use_false_as_var.lox
========================================
Test: variable/use_global_in_initializer.lox
value
========================================

========================================
Test: variable/use_local_in_initializer.lox
========================================
Test: variable/use_nil_as_var.lox
========================================
Test: variable/use_this_as_var.lox
========================================
Test: while/class_in_body.lox
========================================
Test: while/closure_in_body.lox
1.000000
2.000000
3.000000
========================================

========================================
Test: while/fun_in_body.lox
========================================
Test: while/return_closure.lox
i
========================================

========================================
Test: while/return_inside.lox
i
========================================

========================================
Test: while/syntax.lox
1.000000
2.000000
3.000000
0.000000
1.000000
2.000000
========================================

========================================
Test: while/var_in_body.lox
